#version 450

struct Data {
    uint color;
    uint point;
} Vp;

layout(binding = 0) uniform PerImageData {
    Data d1;
    Data d2;
} pid;

layout(std430, binding = 1) buffer ImageSSBOInOut {
    uint pixels[ ];
};

layout(binding = 2) buffer WaveSeedPointSSBOIn {
    uint seeds[ ];
};

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;
void main() {
    uint index = gl_GlobalInvocationID.x;
    uint color = 0x1000000;

    if (index >= pixels.length() || ((pixels[index] & 0x1000000) == 0x1000000)) return;

    if (index > pixels.length() / 2) {
        color |= pid.d1.color;
    } else {
        color |= pid.d2.color;
    }

    pixels[index] = color;
}
